import{_ as t}from"./index-DftMtz74.js";import{z as e,A as r,aG as d}from"./vue-CLSBFK-B.js";import"./element-DBeAxFu9.js";const s={},f={class:"app-contanier"};function v(o,a){return r(),e("div",f,[...a[0]||(a[0]=[d('<div data-v-ea946f89><div data-v-ea946f89><span class="title" data-v-ea946f89> Vue3-Vite-Admin </span></div><br data-v-ea946f89><p data-v-ea946f89> 是一个主要基于 <a href="https://cn.vuejs.org/guide/introduction" target="_blank" class="vue" data-v-ea946f89> Vue3</a>、 <a href="https://cn.vitejs.dev/guide/" target="_blank" class="vite" data-v-ea946f89>Vite</a>、 <a href="https://element-plus.org/zh-CN/component/overview.html" target="_blank" class="ep" data-v-ea946f89>Element-Plus</a>、 <span class="ts" data-v-ea946f89>TypeScript</span> 等前沿技术栈构建的现代化后台管理系统。它旨在为开发者提供一个高效、灵活且易于维护的开发框架，用于快速搭建功能丰富、性能卓越 的后台管理应用。通过集成多种强大的技术组件和工具，该系统能够满足不同业务场景下的数据展示、操作与管理需求，同时具备良好的可 扩展性和可定制性，方便开发者根据具体项目要求进行二次开发和优化。 </p></div><br data-v-ea946f89><br data-v-ea946f89><br data-v-ea946f89><div data-v-ea946f89><h2 data-v-ea946f89>路由管理</h2><br data-v-ea946f89><p data-v-ea946f89>路由结构：</p><p data-v-ea946f89>│ └── 📂 router/</p><p data-v-ea946f89>│ ├── 📄 config.ts</p><p data-v-ea946f89>│ ├── 📄 guard.ts</p><p data-v-ea946f89>│ ├── 📄 index.ts</p><p data-v-ea946f89>│ ├── 📄 whiteList.ts</p></div><br data-v-ea946f89><p data-v-ea946f89>1.📄 whiteList.ts:白名单</p><br data-v-ea946f89><p data-v-ea946f89>用于判断用户访问的路由是否属于免登录白名单，从而决定用户是否可以在未登录的状态下访问某些页面。<br data-v-ea946f89>其中定义了两个白名单数组：<br data-v-ea946f89>whiteListByPath：通过路由的路径（path）来定义免登录白名单。<br data-v-ea946f89>whiteListByName：通过路由的名称（name）来定义免登录白名单。<br data-v-ea946f89>然后，定义了一个名为isWhiteList的函数用于判断这个路由是否在免登录白名单中。</p><br data-v-ea946f89><p data-v-ea946f89>2.📄 config.ts:路由配置设置</p><br data-v-ea946f89><p data-v-ea946f89>用于设置Vue Router的路由模式（根据环境变量VITE_ROUTER_HISTORY选择hash模式或HTML5模式，并设置base路径为VITE_PUBLIC_PATH），以及是否开启动态路由功能（dynamic字段）</p><br data-v-ea946f89><p data-v-ea946f89>3.📄 guard.ts:全局路由守卫</p><br data-v-ea946f89><p data-v-ea946f89><strong data-v-ea946f89>前置守卫beforeEach逻辑</strong>：<br data-v-ea946f89><strong data-v-ea946f89>未登录情况</strong>：检查用户是否有令牌（getToken），如果没有令牌：<br data-v-ea946f89>--如果目标路由在免登录白名单（isWhiteList）中，允许访问。<br data-v-ea946f89>--否则，重定向到登录页面（LOGIN_PATH）。<br data-v-ea946f89><strong data-v-ea946f89>已登录访问登录页</strong>：如果用户已登录且目标路由是登录页，重定向到首页（HOME_PATH）。<br data-v-ea946f89><strong data-v-ea946f89>已获取角色信息</strong>：如果用户已登录且角色信息已获取（userStore.roles.length !== 0），直接放行。<br data-v-ea946f89><strong data-v-ea946f89>需要获取角色信息</strong>：如果用户已登录但角色信息未获取：<br data-v-ea946f89>--尝试获取用户信息（userStore.getInfo）。<br data-v-ea946f89>--根据用户角色动态生成可访问路由（permissionStore.setPermissionRoutes或permissionStore.setAllRoutes）。<br data-v-ea946f89>--将动态路由添加到路由表中（router.addRoute）。<br data-v-ea946f89>--重定向到目标路由，且不保留历史记录（replace: true）。<br data-v-ea946f89>--如果获取用户信息失败，重置令牌并重定向到登录页，同时显示错误消息。<br data-v-ea946f89><strong data-v-ea946f89>后置守卫afterEach逻辑</strong>：<br data-v-ea946f89>监听路由变化，调用setRouteChange更新路由状态。<br data-v-ea946f89>完成页面加载进度条（NProgress.done）。</p><br data-v-ea946f89><p data-v-ea946f89>4.📄 index.ts:路由配置</p><br data-v-ea946f89><p data-v-ea946f89>定义了Vue应用的路由配置，包含静态路由constantRoutes和动态路由dynamicRoutes。此外，还设置了路由模式和全局路由守卫，并提供了resetRouter函数用于重置动态路由。</p>',21)])])}const b=t(s,[["render",v],["__scopeId","data-v-ea946f89"]]);export{b as default};
